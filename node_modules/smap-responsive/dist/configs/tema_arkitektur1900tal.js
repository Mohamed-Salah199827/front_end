
var ws = {
		"localhost": {
			proxy: "//localhost/cgi-bin/proxy.py?url="
		},
		"xyz.malmo.se": {
			proxy: "//xyz.malmo.se/myproxy/proxy.py?url="
		},
		"kartor.malmo.se": {
			proxy: "//kartor.malmo.se/api/v1/proxy.py?url="
		},
		"91.123.201.52": {
			proxy: "//91.123.201.52/cgi-bin/proxy.py?url="
		},
		"mobile.smap.se": {
			proxy: "//mobile.smap.se/smap-mobile/ws/proxy.py?url="
		}
};
var proxy = ws.hasOwnProperty(document.domain) ? ws[document.domain].proxy : null;

var guideLayerName = "guidelayer";

var config = {
	
	params: {
		zoom: 12,
		center: [12.983, 55.614]
		// ,
		// ol: guideLayerName
	},

	ws: ws,
	
	ol: [
			{
				init: "L.GeoJSON.WFS",
				url: "http://localhost/KartService.svc/getItems", //"http://gkkundservice.test.malmo.se/KartService.svc/getItems",
				options: {
					params: {
						maxResults: 100000
					},
					displayName: "Felanmälan",
					layerId: "Felanmalan",
					xhrType: "GET",
					attribution: "Malmö stad",
					inputCrs: "EPSG:3008",
					uniqueKey: "adress",
					selectable: true,
					reverseAxis: false,
					reverseAxisBbox: true,
					geomType: "POINT",
					popup: '${arendeId}'
				}
			},
			{
				init: "L.GeoJSON.WFS",
				url: "http://localhost/geoserver/wfs",
				options: {
					params: {
						typeName: "skane:POI_ARKITEKTUR_1900_PT"
					},
					displayName: "Hus i Malmö 1914-2014",
					layerId: guideLayerName,
					xhrType: "POST",
					attribution: "Malmö stad",
					inputCrs: "EPSG:4326",
					uniqueKey: "fid",
					selectable: true,
					reverseAxis: false,
					reverseAxisBbox: true,
					geomType: "POINT",
					popup:
						'<h4>${title} </h4>'+
						'<div class="gp-mediaicons">${function(p) {'+
								'var out = "";'+
								'var style="margin-right:.3em;";'+
								'if (p.video) {'+
									'	out += \'<span style="\'+style+\'" class="fa fa-film fa-lg"></span>\';'+
									'}'+
								'if (p.audio) {'+
								'	out += \'<span style="\'+style+\'" class="fa fa-volume-up fa-lg"></span>\';'+
								'}'+
							'if (p.pics && p.pics.split(",").length > 1) {'+
							'	out += \'<span style="\'+style+\'" class="fa fa-picture-o fa-lg"></span>\';'+
							'}'+
						'return out;'+
						'}'+
						'}</div>'+
						'${function(p) {'+
								'var out = "";'+
								'var pics = p.pics || "",'+
									'pic;'+
								'pics = pics ? pics.split(",") : [];'+
								'if (pics.length > 1 && pics[0].length) {'+
									'pic = pics[0];'+
								'}'+
								'else if (pics.length === 1) {'+
									'pic = pics;'+
								'}'+
								'else {return "";}'+
								'pic = decodeURIComponent($.trim(pic));'+
								'return "<img style=\'width:100%;max-height:200px;margin-top: 1em;\' src=\'"+pic+"\'></img>";'+
							'}}'
						//kartor.malmo.se/rest/resources/vara_fotspar/${pics}"></img>'
				}
			},

			{
				init: "L.TileLayer.WMS",
				url: "http://localhost/geoserver/wms",
				options: {
					displayName: "Antagna planer",
					layerId: "antagna_planer",
					layers: "malmows:SMA_DP_ADP_YTOR_P",
					category: null,
					legend: "http://localhost/geoserver/wms?request=GetLegendGraphic&layer=malmows:SMA_DP_ADP_YTOR_P&version=1.1.1&format=image/png&rule=1",
					selectable: true,
					popup: '<div>${plan}</div>'+
							'<br><a href="http://kartor.malmo.se/asp/Planer/Planer_lmv.asp?PLAN=${plan}">Mer information</a>',
					format: 'image/png',
					zIndex: 150,
					attribution: "@ Malmö stad",
					transparent: true
				}
			},

			{
				init: "L.TileLayer.WMS",
				url: "http://kartor.malmo.se/geoserver/malmows/wms?",
				options: {
					layerId: "malmo_ortofoto",
					displayName: "Fotokarta 2014",   
					layers: 'malmows:malmo_orto',  //senaste orto ska heta malmo_orto 
					minZoom: 10,
					maxZoom: 21,
					legend: "http://kartor.malmo.se/wwwroot_data/bilder/kartsymboler/orto2014_big.png",
					//legendBig: "http://kartor.malmo.se/wwwroot_data/bilder/kartsymboler/orto2014_big.png",
					format: 'image/jpeg',
					transparent: true,
					opacity: 1,
					attribution: "© Lantmäteriet",
					zIndex: 50
				}
			}
			,
			{
				init: "L.TileLayer.WMS",
				url: "http://kartor.malmo.se/geoserver/malmows/wms?",
				options: {
					layerId: "malmo_ortofoto_1940",
					displayName: "Fotokarta 1938-47",
					layers: 'malmows:malmo_orto_1940',
					minZoom: 10,
					maxZoom: 21,
					legend: "http://kartor.malmo.se/wwwroot_data/bilder/kartsymboler/orto1940_big.png",
					//legendBig: "http://kartor.malmo.se/wwwroot_data/bilder/kartsymboler/orto1940.png",					
					format: 'image/jpeg',
					transparent: true,
					opacity: 1,
					attribution: "© Lantmäteriet",
					zIndex: 50
				}
			}


		],
		
	bl: [
			{
				init: "L.TileLayer.WMS",
				url: "http://kartor.malmo.se/arcgis/services/atlaskarta_3857_wms/MapServer/WMSServer",
				options: {
					layerId: "stadskartan",
					displayName: "Stadskarta",
					category: ["Karta"],
					layers: '0',
					minZoom: 10,
					maxZoom: 21,
					format: 'image/png',
					transparent: false,
					opacity: 1.0,
					attribution: "© Malmö Stadsbyggnadskontor",
					zIndex: 50
				}
			}
			// ,
			// {
			// 	init: "L.TileLayer.WMS",
			// 	url: "http://kartor.malmo.se/arcgis/services/malmokarta_sv_3857_wms/MapServer/WMSServer",
			// 	options: {
			// 		layerId: "stadskartan_sv",
			// 		displayName: "Stadskarta nedtonad",
			// 		category: ["Karta"],
			// 		layers: '0',
			// 		minZoom: 10,
			// 		maxZoom: 21,
			// 		format: 'image/png',
			// 		transparent: false,
			// 		opacity: 1.0,
			// 		attribution: "© Malmö Stadsbyggnadskontor",
			// 		zIndex: 50
			// 	}
			// }
	],
	
	plugins: [
				{
					init: "L.Control.MalmoHeader",
					options: {}
				},
				{
					init: "L.Control.MeasureDraw",
					options: {
						position: "topright"
					}
				},
				{
					init: "L.Control.BoundaryHole",
					options: {
						holeLayerId: "malmo_ortofoto_1940",
						bgLayerId: "malmo_ortofoto"
						
					}
				},
				{
					init: "L.Control.Scale",
					options: {
						imperial: false
					}
				},
				// {
				// 	init: "L.Control.LayerSwitcher",
				// 	options: {}
				// },
				{
					init: "L.Control.SelectWMS",
					options: {
						buffer: 5
					}
				},
//					{
//					init: "L.Control.SelectWMS",
//					options: {
//						buffer: 5
//					}
//					},
				{
					init: "L.Control.SelectVector",
					options: {
						buffer: 5
					}
				},
				{
					init: "L.Control.Zoombar",
					options: {}
				},
				{
					init: "L.Control.Geolocate",
					options: {}
				},
				{
					init: "L.Control.ShareLink",
					options: {
						addToMenu: false
					}
				}
				,
				{
					init: "L.Control.Search",
					options: {
						_lang: {
							sv: {search: "Sök hus, arkitekt eller adress"},
							en: {search: "Search house, architecht or address"}
						},
						gui: true,
						whitespace: "%20",
						wsOrgProj: "EPSG:3008",
						zoom: 18,
						acHeight: "21em",
						useProxy: true, // If set to true, the URL specified in "config.ws.proxy" will be used
						wsAcUrl: "http://kartor.malmo.se/api/v1/addresses/autocomplete/", // autocomplete
						wsLocateUrl: "http://kartor.malmo.se/api/v1/addresses/geolocate/", // geolocate
						acOptions: {
							items: 100
						}
						,
						markerIcon: $.extend({}, (new L.Icon.Default()).options, {
							iconUrl: "img/marker-icon-green.png" //"../1.0-dev/img/marker-icon-green.png"
						}),
						// vectorSearch: {
						// 	layerIds: ["guidelayer"],
						// 	suffix: "[Hus]",
						// 	keyVals: {
						// 		title: "Titel", // This first key will always be used as an identifier for a feature, when highlighting it
						// 		architect: "Arkitekt",
						// 		byggherre: "Byggherre",
						// 		address: "Husadress"
						// 	}
						// },
						suffix: "[Adress]",
						wfsSearch: {
							layerIds: ["guidelayer"],
							suffix: "[Hus]",
							keyVals: {
								title: "Titel", // This first key will always be used as an identifier for a feature, when highlighting it
								architect: "Arkitekt",
								byggherre: "Byggherre",
								address: "Husadress"
							}
						}
					}
				},
				// {
				// 	init: "L.Control.GuideIntroScreen",
				// 	options: {
				// 		autoActivate: false
				// 	}
				// },
				// {
				// 	init: "L.Control.Menu",
				// 	options: {}
				// },
				{
					init: "L.Control.GuidePopup",
					options: {
						autoActivate: false,
						layerId: guideLayerName,
						dialogTitle: "${title}",
						useProxy: false,
						attrId: "fid",
						
						// This object specifies how to fill the big popup (the modal window).
						// The modalContent parameters can be overridden by individual parameters for each feature.
						modalContent: {
							iconType: null,
							dialogTitle: "${title}",
							fullScreenIntroPic: "${pics, 1}", // Used only when clicking on a media tag, opening in fullscreen
							tabIntro: 	'${function(p) {'+
											'var out = "";'+
											'var pics = p.pics || "",'+
												'pic;'+
											'pics = pics ? pics.split(",") : [];'+
											'if (pics.length > 1 && pics[0].length) {'+
												'pic = pics[0];'+
											'}'+
											'else if (pics.length === 1) {'+
												'pic = pics;'+
											'}'+
											'else {return "";}'+
											'pic = decodeURIComponent( $.trim(pic) );'+
											'return "<img style=\'max-width: 100%; max-height: 200px; margin-top: 1em;\' src=\'"+pic+"\'></img>";'+
										'}}'+
										'<p>År:&nbsp;${year_origin}</p>'+
										'<p>Arkitekt:&nbsp;${architect}</p>'+
										'<p>Byggherre:&nbsp;${byggherre}</p>'+
										'<p>Adress:&nbsp;${address}</p>'+
										'<p>${description}</p>',
							tabMedia: [{
								condition: function(p) {
									return p.pics && p.pics.split(",").length > 1;
								},
								label: 'Fler bilder av "${title}"',
								mediaType: "image",
								sources: '${function(p){var pics = p.pics.split(","); '+
										'var out = [];'+
										'for (var i=0,len=pics.length; i<len; i++) {'+
											'out.push($.trim(pics[i]));'+
										'}'+
										'return out.join(",");'+
									'}}'
							},
							{
								condition: function(p) {
									return p.video && p.video.length > 0;
								},
								label: 'Kort film om "${title}"',
								mediaType: "video",
								sources: '${video}'
							}

							],
							tabAccess: '<div>'+
								'${function(p) {'+
										'var out = "";'+
										'var pics = p.pics || "",'+
											'pic;'+
										'pics = pics ? pics.split(",") : [];'+
										'if (pics.length > 1 && pics[0].length) {'+
											'pic = pics[0];'+
										'}'+
										'else if (pics.length === 1) {'+
											'pic = pics;'+
										'}'+
										'else {return "";}'+
										'pic = decodeURIComponent( $.trim(pic) );'+
										'return "<img style=\'max-width:100%;max-height:100px;margin-top: 1em;\' src=\'"+pic+"\'></img>";'+
									'}}'+
								'<p><b>Parkering:</b> ${till_park}</p>'+
								'<p><b>Handikapparkering:</b> ${till_hcp}</p>'+
								'<p><b>Busshållplats:</b> ${till_buss}</p>'+
								'<p><b>Övrigt:</b> ${till_misc}</p>'+
							'</div>'
						},

						modalContentOverrides: {
							
						}
					}
				}
	]
};

// Load auto-complete words from the WFS service defined as an overlay

// smap.db = smap.db || {};
// smap.db.acWfs = []; // Avoid polluting namespace

// Fetch the guide layer
// var tt, t, url;
// for (var i=0,len=config.ol.length; i<len; i++) {
// 	tt = config.ol[i];
// 	if (tt.options.layerId === guideLayerName) {
// 		t = tt;
// 		break;
// 	}
// }

// var t = config.ol[0]; // The layer to request for auto-complete words
// var keys = ["title", "architect", "byggherre", "address"];
// var keysDisplay = ["Titel", "Arkitekt", "Byggherre", "Husadress"];
// var out = [];
// var uniqueKey = t.options.uniqueKey;

// $.ajax({
// 	url: t.url,
// 	type: "GET",
// 	data: {
// 		typeName: t.options.params.typeName,

// 		service: "WFS",
// 		request: "GetFeature",
// 		srsName: "EPSG:4326",
// 		format: "text/geojson",
// 		maxFeatures: 10000,
// 		outputFormat: "json"
// 	},
// 	dataType: "json",
// 	success: function(resp) {
// 		if (resp && resp.features && resp.features.length) {
// 			var fs = resp.features;
// 			var t, val, keysVals, props, obj, searchWords;
// 			for (var i=0,len=fs.length; i<len; i++) {
// 				t = fs[i];
// 				props = t.properties;
// 				obj = $.extend(true, {}, {
// 					name: props[keys[0]]
// 				});
// 				keysVals = {};
// 				searchWords = [];
// 				for (var j=0,lenj=keys.length; j<lenj; j++) {
// 					val = props[ keys[j] ]; // Extract value for this key
// 					if (val && val.length) {
// 						searchWords.push(keysDisplay[j]+"=="+val);
// 					}
// 				}
// 				obj.searchWords = searchWords.join("&&");
// 				out.push(obj);

// 			}
// 			smap.db.acWfs = out; // Cache it for use in autocomplete
// 		}
// 	},
// 	error: function() {
// 		alert("Error loading autocomplete data");
// 	}
// });







